parameters:
    rs_queue.serializer.factory.class: Mmoreram\RSQueueBundle\Factory\SerializerFactory
    rs_queue.serializer.interface: Mmoreram\RSQueueBundle\SerializerInterface
    rs_queue.redis.factory.class: Mmoreram\RSQueueBundle\Factory\RedisFactory
    rs_queue.resolver.queuealias.class: Mmoreram\RSQueueBundle\Resolver\QueueAliasResolver

services:

    rs_queue.serializer.factory:
        class: '%rs_queue.serializer.factory.class%'
        arguments:
            - '%rs_queue.serializer.class%'

    rs_queue.serializer:
        class: '%rs_queue.serializer.interface%'

    rs_queue.redis.factory:
        class: '%rs_queue.redis.factory.class%'
        arguments:
            - '%rs_queue.server.redis%'

    rs_queue.redis:
        class: Redis

    rs_queue.resolver.queuealias:
        class: '%rs_queue.resolver.queuealias.class%'
        arguments:
            queueAliases: '%rs_queue.queues%'

    rs_queue.service:
        abstract: true
        arguments:
            - "@event_dispatcher"
            - "@rs_queue.redis"
            - "@rs_queue.resolver.queuealias"
            - "@rs_queue.serializer"

    rs_queue.consumer:
        class: Mmoreram\RSQueueBundle\Services\Consumer
        parent: rs_queue.service

    rs_queue.producer:
        class: Mmoreram\RSQueueBundle\Services\Producer
        parent: rs_queue.service

    rs_queue.publisher:
        class: Mmoreram\RSQueueBundle\Services\Publisher
        parent: rs_queue.service

    rs_queue.data_collector:
        class: Mmoreram\RSQueueBundle\Collector\RSQueueCollector
        tags:
            - { name: data_collector, template: "RSQueueBundle:Collector:rsqueue", id: "rsqueue_collector" }
            - { name: kernel.event_listener, event: rsqueue.producer, method: onProducerAction }
            - { name: kernel.event_listener, event: rsqueue.publisher, method: onPublisherAction }
